Acronym,Name,functionCall,gridSearch,optimizedCall,TypeOLS,Ordinary Least Squares,LinearRegression(),GridSearchCV(estimator=model),LinearRegression(,linear modelRR,Ridge Regression,Ridge(),"GridSearchCV(estimator=model, param_grid={""alpha"": [0.001,0.01,0.1,1,10,100,500,1000]})",Ridge(,linear modelLR,Lasso Regression,Lasso(),"GridSearchCV(estimator=model, param_grid={""alpha"": [0.001,0.01,0.1,1,10,100,500,1000]})",Lasso(,linear model BR,Bagging Regressor,BaggingRegressor(),"GridSearchCV(estimator=model, param_grid={""n_estimators"": [1,5,10,25,50,100,250,500,700,1000,1500]})",BaggingRegressor(,ensembleEN,Elastic Net,ElasticNet(),"GridSearchCV(estimator=model, param_grid={""alpha"": [0.001,0.01,0.1,1,10,100,500,1000]})",ElasticNet(,linear modelGBR,Gradient Boosting Regression,GradientBoostingRegressor(),"GridSearchCV(estimator=model, param_grid={""n_estimators"": [1,5,10,25,50,100,250,500,700,1000,1500]})",GradientBoostingRegressor(,ensembleRFR,Random Forest Regressor,RandomForestRegressor(),"GridSearchCV(estimator=model, param_grid={""n_estimators"": [1,5,10,25,50,100,250,500,700,1000,1500]})",RandomForestRegressor(,ensembleDTR,Decision Tree Regressor,DecisionTreeRegressor(),GridSearchCV(estimator=model),DecisionTreeRegressor(,treeETR,Extra Trees Regressor,ExtraTreesRegressor(),"GridSearchCV(estimator=model, param_grid={""n_estimators"": [1,5,10,25,50,100,250,500,700,1000,1500]})",ExtraTreesRegressor(,ensembleMLP,MLP Regressor,MLPRegressor(),"GridSearchCV(estimator=model, param_grid={""alpha"": [0.0001,0.001,0.01,0.1,1,10,100,500,1000]})",MLPRegressor(,neural 